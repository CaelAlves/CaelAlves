Este código implementa uma aplicação gráfica simples usando a biblioteca tkinter do Python. O objetivo é abrir um link do Instagram, capturar a posição do mouse e, em seguida, copiar e colar uma lista de palavras em um campo de comentários no Instagram. Vamos analisar o código em partes.

Importações
python

Copiar
import tkinter as tk
import webbrowser
import pyautogui
import time
import pyperclip
import random
from tkinter import messagebox
tkinter: biblioteca padrão para criar interfaces gráficas.
webbrowser: permite abrir URLs no navegador padrão.
pyautogui: automação do mouse e teclado.
time: funções de tempo, como sleep.
pyperclip: manipulação da área de transferência (copiar/colar).
random: geração de números aleatórios.
messagebox: para exibir mensagens ao usuário.
Função esperar_variavel
python

Copiar
def esperar_variavel(minimo=1, maximo=3):
    """Aguarda um tempo aleatório entre o mínimo e máximo fornecidos."""
    tempo_espera = random.uniform(minimo, maximo)
    print(f"Aguardando {tempo_espera:.2f} segundos...")
    time.sleep(tempo_espera)
Gera um tempo de espera aleatório entre os limites especificados (minimo e maximo).
Usa time.sleep para pausar a execução.
Função abrir_link
python

Copiar
def abrir_link():
    palavras = entrada_palavras.get("1.0", tk.END).strip().splitlines()
    link = entrada_link.get()
    
    if link:
        print("Link:", link)
        webbrowser.open(link)
        
        messagebox.showinfo("Mover o Mouse", "Movimente o mouse até o ícone de comentário (balão) e aguarde 5 segundos.")
        
        time.sleep(5)
        
        x, y = pyautogui.position()
        print(f"Posição capturada: x={x}, y={y}")
        
        messagebox.showinfo("Posição Copiada", f"Posição do mouse copiada: x={x}, y={y}")
        
        for palavra in palavras:
            pyperclip.copy(palavra)
            print("Palavra copiada:", palavra)
            
            esperar_variavel(1, 2)
            
            pyautogui.moveTo(x, y)
            pyautogui.click()
            
            esperar_variavel(0.5, 1.5)
            
            pyautogui.hotkey('ctrl', 'v')
            pyautogui.press('enter')
            
            esperar_variavel(1, 3)
    else:
        print("Por favor, insira um link.")
Captura as palavras e o link inseridos pelo usuário.
Se um link é fornecido, ele é aberto no navegador.
O usuário é solicitado a mover o mouse para um ícone de comentário e aguardar 5 segundos.
A posição do mouse é capturada e impressa.
Para cada palavra na lista:
A palavra é copiada para a área de transferência.
O mouse é movido para a posição capturada e clicado.
A palavra é colada no campo de comentários e o Enter é pressionado.
Espera-se um tempo aleatório entre as ações.
Configuração da Janela
python

Copiar
janela = tk.Tk()
janela.title("Acessar Instagram")

tk.Label(janela, text="Digite uma lista de palavras:").pack()
entrada_palavras = tk.Text(janela, height=10, width=50)
entrada_palavras.pack()

tk.Label(janela, text="Digite o link da postagem do Instagram:").pack()
entrada_link = tk.Entry(janela, width=50)
entrada_link.pack()

botao_abrir = tk.Button(janela, text="Abrir Link e Clicar", command=abrir_link)
botao_abrir.pack()

janela.mainloop()
Cria uma janela principal com título "Acessar Instagram".
Adiciona campos de entrada para a lista de palavras e o link do Instagram.
Um botão é configurado para chamar a função abrir_link quando clicado.
janela.mainloop() inicia o loop da interface gráfica.
Considerações Finais
Automação: Este código automatiza a interação com a interface do Instagram, o que pode violar os termos de serviço da plataforma.
Uso de Esperas: O uso de esperas aleatórias simula um comportamento humano para evitar detecção em automações.
Dependências: O código depende de bibliotecas externas (pyautogui, pyperclip), que precisam estar instaladas no ambiente Python.
Essa aplicação é um exemplo prático de automação com Python e pode ser adaptada para outras finalidades, dependendo das necessidades do usuário.
